{"ast":null,"code":"var _jsxFileName = \"E:\\\\FBLA-WebDesign\\\\gym\\\\src\\\\Pages\\\\Mission.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { baseUrl } from \"../config\";\n\n// Import the CareerBox component if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Mission = () => {\n  _s();\n  const [jobOpenings, setJobOpening] = useState([]);\n  useEffect(() => {\n    const fetchJobOpenings = async () => {\n      const response = await fetch(`${baseUrl}/job`);\n      if (response.ok) {\n        const data = await response.json();\n        setJobOpening(data);\n      } else {\n        console.error(\"Failed to fetch job openings\");\n      }\n    };\n    fetchJobOpenings();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: jobOpenings.map(job => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: job.company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n_s(Mission, \"/tHmDOKdv4LnoqIBPw7UzOshFRM=\");\n_c = Mission;\nexport default Mission;\nvar _c;\n$RefreshReg$(_c, \"Mission\");","map":{"version":3,"names":["React","useEffect","useState","baseUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Mission","_s","jobOpenings","setJobOpening","fetchJobOpenings","response","fetch","ok","data","json","console","error","children","map","job","company","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/FBLA-WebDesign/gym/src/Pages/Mission.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { baseUrl } from \"../config\";\r\n\r\n// Import the CareerBox component if needed\r\n\r\nconst Mission = () => {\r\n    const [jobOpenings, setJobOpening] = useState([]);\r\n    useEffect(() => {\r\n        const fetchJobOpenings = async () => {\r\n            const response = await fetch(`${baseUrl}/job`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setJobOpening(data);\r\n            } else {\r\n                console.error(\"Failed to fetch job openings\");\r\n            }\r\n        };\r\n\r\n        fetchJobOpenings();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n                {jobOpenings.map((job) => (\r\n                    <p>{job.company}</p>\r\n                ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Mission;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,WAAW;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACjDD,SAAS,CAAC,MAAM;IACZ,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,OAAQ,MAAK,CAAC;MAC9C,IAAIU,QAAQ,CAACE,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,aAAa,CAACK,IAAI,CAAC;MACvB,CAAC,MAAM;QACHE,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MACjD;IACJ,CAAC;IAEDP,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIP,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACSV,WAAW,CAACW,GAAG,CAAEC,GAAG,iBACjBjB,OAAA;MAAAe,QAAA,EAAIE,GAAG,CAACC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACtB;EAAC,gBACR,CAAC;AAEX,CAAC;AAAClB,EAAA,CAxBID,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}